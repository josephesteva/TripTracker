// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  username            String                @unique
  password            String
  DestinationsOnUsers DestinationsOnUsers[]
  Comments            Comment[]
  Likes               Like[]
}

model Destination {
  id                  Int                   @id @default(autoincrement())
  name                String
	country							String?
  description         String?
	imageUrl						String?
  location            String?
  DestinationsOnUsers DestinationsOnUsers[]
  Comments            Comment[]
  Likes               Like[]
}

model DestinationsOnUsers {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  destination   Destination @relation(fields: [destinationId], references: [id], onDelete: Cascade)
  destinationId Int
  status        String
  notes         String
}

model Comment {
  id            Int         @id @default(autoincrement())
  content       String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  destination   Destination @relation(fields: [destinationId], references: [id], onDelete: Cascade)
  destinationId Int
  date          DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
}

model Like {
  id            Int         @id @default(autoincrement())
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
  destination   Destination @relation(fields: [destinationId], references: [id], onDelete: Cascade)
  destinationId Int
}
